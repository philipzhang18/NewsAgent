version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:6.0
    container_name: newsagent-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password}
      MONGO_INITDB_DATABASE: news_agent
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - newsagent_network

  # Redis cache and message broker
  redis:
    image: redis:7-alpine
    container_name: newsagent-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redispassword}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - newsagent_network

  # Main Flask application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: newsagent-app
    restart: unless-stopped
    command: gunicorn --config gunicorn_config.py --bind 0.0.0.0:8000 src.app:app
    environment:
      - FLASK_ENV=production
      - MONGODB_URI=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password}@mongodb:27017/news_agent?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379/1
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - mongodb
      - redis
    networks:
      - newsagent_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery worker - collection queue
  worker-collection:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: newsagent-worker-collection
    restart: unless-stopped
    command: celery -A src.celery_app:celery_app worker -Q collection -n collection_worker@%h -l info
    environment:
      - FLASK_ENV=production
      - MONGODB_URI=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password}@mongodb:27017/news_agent?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379/1
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - newsagent_network

  # Celery worker - processing queue
  worker-processing:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: newsagent-worker-processing
    restart: unless-stopped
    command: celery -A src.celery_app:celery_app worker -Q processing -n processing_worker@%h -c 4 -l info
    environment:
      - FLASK_ENV=production
      - MONGODB_URI=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password}@mongodb:27017/news_agent?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379/1
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - newsagent_network

  # Celery worker - default queue
  worker-default:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: newsagent-worker-default
    restart: unless-stopped
    command: celery -A src.celery_app:celery_app worker -Q default -n default_worker@%h -l info
    environment:
      - FLASK_ENV=production
      - MONGODB_URI=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password}@mongodb:27017/news_agent?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379/1
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - newsagent_network

  # Celery beat scheduler
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: newsagent-celery-beat
    restart: unless-stopped
    command: celery -A src.celery_app:celery_app beat -l info
    environment:
      - FLASK_ENV=production
      - MONGODB_URI=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password}@mongodb:27017/news_agent?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379/1
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - newsagent_network

  # Flower - Celery monitoring
  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: newsagent-flower
    restart: unless-stopped
    command: celery -A src.celery_app:celery_app flower --port=5555
    environment:
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-redispassword}@redis:6379/1
    ports:
      - "5555:5555"
    depends_on:
      - redis
    networks:
      - newsagent_network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: newsagent-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx-docker.conf:/etc/nginx/conf.d/default.conf:ro
      - ./src/static:/var/www/newsagent/static:ro
      - ./logs/nginx:/var/log/nginx
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - newsagent_network

networks:
  newsagent_network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  redis_data:
    driver: local
